Verschiedenes:
==============
- EVS Simulation über Modelica
- Bei der Simulation eines einzelnen Bausteins auf Grenzwerte, wie z.B. max. Stromfluß über eine Schnittstelle achten usw...
- Implementierung v. Unit-Tests 
- AOCS Simulation: Anforderungen sollen eingehalten werden, bzw. herausgefunden werden.


Zu implementierende Komponenten:
================================
- PCU:
  - DCDC Converter: Es gibt ein ganz gutes Paper von Modelica um "solch einen" zu erstellen. ansonsten muss man sich eben mit einem simplen quasistationären Ersatzmodell behelfen (Wirkungsgrad + Spannugnsverlust)
    - DCDC Converter sind eine der wichtigsten Elemente im EVS. Da sollte untersucht werden, welche Vor/Nachteile verschiedene Wandler uns bringen.
    - z.Zt. noch sehr unrealistisch: muss durch ein realistisches Modell ersetzt werden.
- OBC
  - Mit ein klein bischen zufälligem Rauschen, was die Auslastung (und damit Energieverbrauch) angeht
- AOCS
  - Drallrad
  - Gyros
  - Lagesensorik
  - Triebwerke und Düsen
- weitere Komponenten aus Bausteinkatalog


Analyse von Simulationsergebnisse:
==================================
- Python Skript für Auswertung.

Bausteinkatalog
===============
- max_power und power, das verbraucht wird, muss überarbeitet werden (z.B. elektr. BS: PSCU und Triebwerk haben beide als power_max 5000W angegeben, es handelt sich jedoch nicht in beiden Fällen um Verbrauchswerte)

Modell-Struktur in Modelica:
============================
  - Wiederstände und andere Komponenten lassen sich über das Stichwort "replacable" parametrisieren
  - separate Modelle für Thermal, EVS, Lageregelung und dann die einzelnen Bausteinklassen in einem "Supermodell" verheiraten?
  - cardinality keyword -> feststellen, welche Schnittstellen verbunden sind, und welche nicht.
  - connections können auch in for-loops/if Abfragen usw... deklariert werden!
  - "terminate" Beendet Simulation nach einer vorgegeben Bedingung
  - Record classes benutzen, um verschiedene Bausteinarten und Schnittstellenanzahl usw zu parametrisieren.

Experimente:
============
  * Ein simulierter "Lockdown" der Solarzellen als Verifikation
  * Rückkopplungsverhalten bei Tag & Nachtwechsel zeigen
  * Anzahl der Bausteine und Stabilität des EVS in Abhängigkeit der Energieerzeugung
  * Anzahl der benötigten Batterien
  * Anzahl der benötigten Solarzellen
  * Maximale Verbrauchswerte für einzelne Bausteine in Abhängigkeit der Energieerzeugung (damit z.B. keine Thermalgrenzwerte überschritten werden.)
  * Stabilität des EVS?
  * PCU Regler testen
  * AOCS testen


Bausteinkatalog/XML:
====================
- Bausteine müssen angeben, wie ihre "Form" ist. z.B. in Form einer Liste von Positions-Vektoren
- Verbrauch analysieren
- dc. implementieren
- Inhalt eines Bausteins analysieren, modifizieren
- Verbrauch Racktionrad = Drallrad?
