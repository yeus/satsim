within iboss.iboss_thermal.buildingblocks;

model BuildingBlock_optical_properties_var_rad "thermisches model eines Bausteins mit 6 Seiten mit Schnittstellen"
  thermal_connector thermal_connector_xp "Verbindungselement fuer mehr als eine Schnittstelle" annotation(Placement(transformation(origin = {325, -95}, extent = {{-10, -10}, {10, 10}}), iconTransformation(origin = {100, 0}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b port_b annotation(Placement(transformation(origin = {110, -45}, extent = {{-10, -10}, {10, 10}}), iconTransformation(origin = {0, 0}, extent = {{-10, -10}, {10, 10}})));
  thermal_connector thermal_connector_yn "Verbindungselement fuer mehr als eine Schnittstelle" annotation(Placement(transformation(origin = {160, -235}, extent = {{-10, 10}, {10, -10}}, rotation = -90), iconTransformation(origin = {0, -100}, extent = {{-12, 12}, {12, -12}}, rotation = -90)));
  thermal_connector thermal_connector_zp annotation(Placement(transformation(origin = {10, -250}, extent = {{10, 10}, {-10, -10}}, rotation = -180), iconTransformation(origin = {-87.4828, -87.75790000000001}, extent = {{12, 12}, {-12, -12}}, rotation = -180)));
  thermal_connector thermal_connector_xn annotation(Placement(transformation(origin = {15, -95}, extent = {{10, 10}, {-10, -10}}, rotation = -180), iconTransformation(origin = {-99.3122, -2.75103}, extent = {{12, 12}, {-12, -12}}, rotation = -180)));
  thermal_connector thermal_connector_yp annotation(Placement(transformation(origin = {165, 35}, extent = {{10, -10}, {-10, 10}}, rotation = -270), iconTransformation(origin = {1.10041, 98.762}, extent = {{12, -12}, {-12, 12}}, rotation = -270)));
  thermal_connector thermal_connector_zn annotation(Placement(transformation(origin = {300, 35}, extent = {{-10, -10}, {10, 10}}, rotation = -360), iconTransformation(origin = {87.8378, 87.8378}, extent = {{-12, -12}, {12, 12}})));
  panel_surface panel_surface_xn "optical properties of the outer surface of the side panel" annotation(Placement(transformation(origin = {15, -75}, extent = {{-10, -10}, {10, 10}}, rotation = 90), iconTransformation(origin = {-100, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  panel_surface panel_surface_yp "optical properties of the outer surface of the side panel" annotation(Placement(transformation(extent = {{175, 35}, {195, 55}}), iconTransformation(extent = {{40, 90}, {60, 110}})));
  panel_surface panel_surface_zn "optical properties of the outer surface of the side panel" annotation(Placement(transformation(origin = {320, 10}, extent = {{-10, -10}, {10, 10}}, rotation = -90), iconTransformation(origin = {100, 50}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  panel_surface panel_surface_xp "optical properties of the outer surface of the side panel" annotation(Placement(transformation(origin = {330, -115}, extent = {{-10, -10}, {10, 10}}, rotation = -90), iconTransformation(origin = {100, -50}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  panel_surface panel_surface_yn "optical properties of the outer surface of the side panel" annotation(Placement(transformation(origin = {135, -235}, extent = {{-10, -10}, {10, 10}}, rotation = -180), iconTransformation(origin = {-50, -100}, extent = {{-10, -10}, {10, 10}}, rotation = -180)));
  panel_surface panel_surface_zp "optical properties of the outer surface of the side panel" annotation(Placement(transformation(origin = {0, -230}, extent = {{-10, -10}, {10, 10}}, rotation = -270), iconTransformation(origin = {-100, -50}, extent = {{-10, -10}, {10, 10}}, rotation = -270)));
  parameter Modelica.SIunits.Height x_ESS = 0.08 "length of ESS in m";
  parameter Modelica.SIunits.Height y_ESS = 0.01 "height of ESS in m";
  parameter Modelica.SIunits.Height z_ESS = 0.01 "width of ESS in m";
  parameter Modelica.SIunits.Height x_MSS = 0.05 "length of MSS in m";
  parameter Modelica.SIunits.Height y_MSS = 0.08 "height of MSS in m";
  parameter Modelica.SIunits.Height z_MSS = 0.08 "width of MSS in m";
  parameter Modelica.SIunits.Height x_TSS = 0.03 "length of TSS in m";
  parameter Modelica.SIunits.Height y_TSS = 0.25 "height of TSS in m";
  parameter Modelica.SIunits.Height z_TSS = 0.25 "width of TSS in m";
  parameter Modelica.SIunits.Height x_Panel = 0.03 "thickness of Panel in m";
  parameter Modelica.SIunits.Height y_Panel = 0.4 "height of Panel in m";
  parameter Modelica.SIunits.Height z_Panel = 0.4 "width of Panel in m";
  parameter Modelica.SIunits.Emissivity alpha_TSS = 0.9 "Absorptionskoeffizient der thermalen Schnittstelle";
  parameter Modelica.SIunits.Emissivity alpha_MSS = 0.4 "Absorptionskoeffizient der mechanischen Schnittstelle";
  parameter Modelica.SIunits.Emissivity alpha_ESS = 0.3 "Absorptionskoeffizient der elektrischen Schnittstelle";
  parameter Modelica.SIunits.Emissivity epsilon_TSS = 0.1 "Emmisionskoeffizient der thermalen Schnittstelle tbd";
  parameter Modelica.SIunits.Emissivity epsilon_MSS = 0.4 "Emmisionskoeffizient der mechanischen Schnittstelle tbd";
  parameter Modelica.SIunits.Emissivity epsilon_ESS = 0.3 "Emmisionskoeffizient der elektrischen Schnittstelle tbd Materialdatenbank";
  parameter Modelica.SIunits.Height x_EB = 0.1 "length of Electronic Box in m";
  parameter Modelica.SIunits.Height y_EB = 0.1 "height of Electronic Box in m";
  parameter Modelica.SIunits.Height z_EB = 0.1 "width of Electronic Box in m";
  parameter MaterialDatabase.Material material_ESS = MaterialDatabase.Kupferlegierungen_Kupfer() "Material of ESS from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}})), choicesAllMatching = true);
  parameter MaterialDatabase.Material material_MSS = MaterialDatabase.Andere_Metalle_Titan() "Material of MSS from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}})), choicesAllMatching = true);
  parameter MaterialDatabase.Material material_TSS = MaterialDatabase.Kupferlegierungen_Kupfer() "Material of TSS from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}})), choicesAllMatching = true);
  parameter MaterialDatabase.Material material_Panel = MaterialDatabase.Kohlenstofffasern_Carbon_Panel_tbd() "Material of Panel from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}})), choicesAllMatching = true);
  parameter MaterialDatabase.Material material_EB = MaterialDatabase.Elektronik_Box_Composit() "Material of Electronic Box from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}})), choicesAllMatching = true);
  parameter Modelica.SIunits.Power BuildingBlock_Power = 5 "Leistungsbedarf des Standartbausteins";
  parameter Real h_Panel(unit = "W/(m²·K)") = 300 "Heat transfer coefficient Panel-Panel";
  parameter Real h_EB(unit = "W/(m²·K)") = 300 "Heat transfer coefficient EB-Panel";
  parameter Real ViewFactor_parallel = 0.2 "Viewfactor of parallel Surfaces";
  parameter Real ViewFactor_vertical = 0.2 "Viewfactor of vertical Surfaces";
  parameter Modelica.SIunits.Emissivity eps_Panel = 0.5 "Emmisivity of the inner side of the panel";
  parameter Modelica.SIunits.Emissivity eps_EB = 0.5 "Emmisivity of the electronic box";
  parameter Modelica.SIunits.Temp_K lower_Temp_boundary = 270 "Coldest allowed temperatur in the Box";
  parameter Modelica.SIunits.Temp_K upper_Temp_boundary = 310 "highest allowed temperatur in the Box";
  parameter Modelica.SIunits.ActivePower heating_power = 20 "heat Power of the heater";
  parameter Modelica.SIunits.ActivePower cooling_power = -20 "heat Power of the cooler";
  parameter Real hysteresis_heater = 5 "Bandwidth of the controller / K";
  parameter Real hysteresis_cooler = 5 "Bandwidth of the controller / K";
  thermal_Panel_with_Interface_with_optical_properties_var_rad Panel_xp(alpha_TSS = alpha_TSS, alpha_MSS = alpha_MSS, alpha_ESS = alpha_ESS, epsilon_TSS = epsilon_TSS, epsilon_MSS = epsilon_MSS, epsilon_ESS = epsilon_ESS, x_ESS = x_ESS, y_ESS = y_ESS, z_ESS = z_ESS, x_MSS = x_MSS, y_MSS = y_MSS, z_MSS = z_MSS, x_TSS = x_TSS, y_TSS = y_TSS, z_TSS = z_TSS, x_Panel = x_Panel, y_Panel = y_Panel, z_Panel = z_Panel, material_ESS = material_ESS, material_MSS = material_MSS, material_TSS = material_TSS, material_Panel = material_Panel) annotation(schnittstelle1(material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), ESS(material(choicesAllMatching = true)), MSS(material(choicesAllMatching = true)), TSS(material(choicesAllMatching = true))), BuildingBlock_Panel(material(choicesAllMatching = true)), material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), material_Panel(choicesAllMatching = true), Placement(transformation(origin = {265, -105}, extent = {{-10, -10}, {25, 25}})));
  thermal_Panel_with_Interface_with_optical_properties_var_rad Panel_xn(alpha_TSS = alpha_TSS, alpha_MSS = alpha_MSS, alpha_ESS = alpha_ESS, epsilon_TSS = epsilon_TSS, epsilon_MSS = epsilon_MSS, epsilon_ESS = epsilon_ESS, x_ESS = x_ESS, y_ESS = y_ESS, z_ESS = z_ESS, x_MSS = x_MSS, y_MSS = y_MSS, z_MSS = z_MSS, x_TSS = x_TSS, y_TSS = y_TSS, z_TSS = z_TSS, x_Panel = x_Panel, y_Panel = y_Panel, z_Panel = z_Panel, material_ESS = material_ESS, material_MSS = material_MSS, material_TSS = material_TSS, material_Panel = material_Panel) annotation(schnittstelle1(material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), ESS(material(choicesAllMatching = true)), MSS(material(choicesAllMatching = true)), TSS(material(choicesAllMatching = true))), BuildingBlock_Panel(material(choicesAllMatching = true)), material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), material_Panel(choicesAllMatching = true), Placement(transformation(origin = {65, -100}, extent = {{-15, -20}, {20, 15}}, rotation = -180)));
  thermal_Panel_with_Interface_with_optical_properties_var_rad Panel_yp(alpha_TSS = alpha_TSS, alpha_MSS = alpha_MSS, alpha_ESS = alpha_ESS, epsilon_TSS = epsilon_TSS, epsilon_MSS = epsilon_MSS, epsilon_ESS = epsilon_ESS, x_ESS = x_ESS, y_ESS = y_ESS, z_ESS = z_ESS, x_MSS = x_MSS, y_MSS = y_MSS, z_MSS = z_MSS, x_TSS = x_TSS, y_TSS = y_TSS, z_TSS = z_TSS, x_Panel = x_Panel, y_Panel = y_Panel, z_Panel = z_Panel, material_ESS = material_ESS, material_MSS = material_MSS, material_TSS = material_TSS, material_Panel = material_Panel) annotation(schnittstelle1(material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), ESS(material(choicesAllMatching = true)), MSS(material(choicesAllMatching = true)), TSS(material(choicesAllMatching = true))), BuildingBlock_Panel(material(choicesAllMatching = true)), material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), material_Panel(choicesAllMatching = true), Placement(transformation(origin = {160, 0}, extent = {{-15, -20}, {15, 15}}, rotation = -270)));
  thermal_Panel_with_Interface_with_optical_properties_var_rad Panel_yn(alpha_TSS = alpha_TSS, alpha_MSS = alpha_MSS, alpha_ESS = alpha_ESS, epsilon_TSS = epsilon_TSS, epsilon_MSS = epsilon_MSS, epsilon_ESS = epsilon_ESS, x_ESS = x_ESS, y_ESS = y_ESS, z_ESS = z_ESS, x_MSS = x_MSS, y_MSS = y_MSS, z_MSS = z_MSS, x_TSS = x_TSS, y_TSS = y_TSS, z_TSS = z_TSS, x_Panel = x_Panel, y_Panel = y_Panel, z_Panel = z_Panel, material_ESS = material_ESS, material_MSS = material_MSS, material_TSS = material_TSS, material_Panel = material_Panel) annotation(schnittstelle1(material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), ESS(material(choicesAllMatching = true)), MSS(material(choicesAllMatching = true)), TSS(material(choicesAllMatching = true))), BuildingBlock_Panel(material(choicesAllMatching = true)), material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), material_Panel(choicesAllMatching = true), Placement(transformation(origin = {155, -195}, extent = {{-10, -10}, {25, 25}}, rotation = -90)));
  thermal_Panel_with_Interface_with_optical_properties_var_rad Panel_zn(alpha_TSS = alpha_TSS, alpha_MSS = alpha_MSS, alpha_ESS = alpha_ESS, epsilon_TSS = epsilon_TSS, epsilon_MSS = epsilon_MSS, epsilon_ESS = epsilon_ESS, x_ESS = x_ESS, y_ESS = y_ESS, z_ESS = z_ESS, x_MSS = x_MSS, y_MSS = y_MSS, z_MSS = z_MSS, x_TSS = x_TSS, y_TSS = y_TSS, z_TSS = z_TSS, x_Panel = x_Panel, y_Panel = y_Panel, z_Panel = z_Panel, material_ESS = material_ESS, material_MSS = material_MSS, material_TSS = material_TSS, material_Panel = material_Panel) annotation(schnittstelle1(material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), ESS(material(choicesAllMatching = true)), MSS(material(choicesAllMatching = true)), TSS(material(choicesAllMatching = true))), BuildingBlock_Panel(material(choicesAllMatching = true)), material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), material_Panel(choicesAllMatching = true), Placement(transformation(origin = {280, 11}, extent = {{-10, -10}, {24, 24}}, rotation = 45)));
  thermal_Panel_with_Interface_with_optical_properties_var_rad Panel_zp(alpha_TSS = alpha_TSS, alpha_MSS = alpha_MSS, alpha_ESS = alpha_ESS, epsilon_TSS = epsilon_TSS, epsilon_MSS = epsilon_MSS, epsilon_ESS = epsilon_ESS, x_ESS = x_ESS, y_ESS = y_ESS, z_ESS = z_ESS, x_MSS = x_MSS, y_MSS = y_MSS, z_MSS = z_MSS, x_TSS = x_TSS, y_TSS = y_TSS, z_TSS = z_TSS, x_Panel = x_Panel, y_Panel = y_Panel, z_Panel = z_Panel, material_ESS = material_ESS, material_MSS = material_MSS, material_TSS = material_TSS, material_Panel = material_Panel) annotation(schnittstelle1(material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), ESS(material(choicesAllMatching = true)), MSS(material(choicesAllMatching = true)), TSS(material(choicesAllMatching = true))), BuildingBlock_Panel(material(choicesAllMatching = true)), material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), material_Panel(choicesAllMatching = true), Placement(transformation(origin = {45, -224}, extent = {{-24, -24}, {10, 10}}, rotation = -135)));
  thermalModel_ElectronicBox thermalModel_ElectronicBox1(material = material_EB, x = x_EB, y = y_EB, z = z_EB) annotation(material(choicesAllMatching = true), Placement(transformation(origin = {150, -110}, extent = {{-5, -5}, {30, 30}})));
  intra_BuildingBlock_connector EB_Pxp(Gr = Gr_P_EB, A_cross_Panel = y_EB * z_EB, h_c = h_EB) annotation(Placement(transformation(origin = {207, -97}, extent = {{-6.6332, -6.6332}, {6.6332, 6.6332}})));
  intra_BuildingBlock_connector EB_Pxn(Gr = Gr_P_EB, A_cross_Panel = y_EB * z_EB, h_c = h_EB) annotation(Placement(transformation(origin = {116, -96}, extent = {{-6, -9}, {6.25, 6.25}})));
  intra_BuildingBlock_connector EB_Pyn(Gr = Gr_P_EB, A_cross_Panel = x_EB * z_EB, h_c = h_EB) annotation(Placement(transformation(origin = {161, -141}, extent = {{-6.4815, -6.4815}, {6.4815, 6.4815}}, rotation = -90)));
  intra_BuildingBlock_connector EB_Pyp(Gr = Gr_P_EB, A_cross_Panel = x_EB * z_EB, h_c = h_EB) annotation(Placement(transformation(origin = {162, -52}, extent = {{-6.6332, -6.6332}, {6.6332, 6.6332}}, rotation = -90)));
  intra_BuildingBlock_connector EB_Pzp(Gr = Gr_P_EB, A_cross_Panel = y_EB * x_EB, h_c = h_EB) annotation(Placement(transformation(origin = {126, -132}, extent = {{-10, -8}, {4, 6}}, rotation = 45)));
  intra_BuildingBlock_connector EB_Pzn(Gr = Gr_P_EB, A_cross_Panel = y_EB * x_EB, h_c = h_EB) annotation(Placement(transformation(origin = {201, -64}, extent = {{-6.4943, -6.4943}, {9, 11}}, rotation = 45)));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation oposite_Panel_x(Gr = Gr_oP) annotation(Placement(transformation(origin = {117, -72}, extent = {{-6.7966, -6.7966}, {6.7966, 6.7966}})));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation oposite_Panel_z(Gr = Gr_oP) annotation(Placement(transformation(origin = {210, -128}, extent = {{-10, -10}, {3, 3}})));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation oposite_Panel_y(Gr = Gr_oP) annotation(Placement(transformation(origin = {186, -161}, extent = {{-6.0172, 6.0172}, {6.0172, -6.0172}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Sources.FixedHeatFlow fixedHeatFlow1(Q_flow = BuildingBlock_Power) annotation(Placement(transformation(extent = {{0, 0}, {20, 20}})));
  TCS tCS1(hysteresis_cooler = hysteresis_cooler, hysteresis_heater = hysteresis_heater) annotation(Placement(transformation(extent = {{-85, -30}, {-65, -10}})));
  heater_cooler_EPS heater_cooler_EPS1(power_cooler = cooling_power, upper_Temp_boundary(displayUnit = "K") = upper_Temp_boundary, power_heater = heating_power, lower_Temp_boundary(displayUnit = "K") = lower_Temp_boundary) annotation(Placement(transformation(extent = {{-40, -50}, {-20, -30}})));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_xn_zn(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(extent = {{55, 35}, {70, 50}})));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_xn_zn(Gr = Gr_aP) annotation(Placement(transformation(extent = {{55, 50}, {70, 65}})));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_yp_zn(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(extent = {{185, 5}, {200, 20}})));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_yp_zn(Gr = Gr_aP) annotation(Placement(transformation(extent = {{185, 20}, {200, 35}})));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_xp_yp(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(extent = {{220, -20}, {235, -5}})));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_xp_yp(Gr = Gr_aP) annotation(Placement(transformation(extent = {{220, -5}, {235, 10}})));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_xp_zn(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(origin = {297.5, -47.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_xp_zn(Gr = Gr_aP) annotation(Placement(transformation(origin = {317.5, -47.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_yn_zn(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(origin = {302.5, -127.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_yn_zn(Gr = Gr_aP) annotation(Placement(transformation(origin = {322.5, -127.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_xp_yn(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(origin = {272.5, -162.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_xp_yn(Gr = Gr_aP) annotation(Placement(transformation(origin = {292.5, -162.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_xp_zp(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(origin = {227.5, -172.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_xp_zp(Gr = Gr_aP) annotation(Placement(transformation(origin = {247.5, -172.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_xn_yp(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(origin = {22.5, -57.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_xn_yp(Gr = Gr_aP) annotation(Placement(transformation(origin = {42.5, -57.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_yp_zp(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(origin = {62.5, -62.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_yp_zp(Gr = Gr_aP) annotation(Placement(transformation(origin = {82.5, -62.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_xn_zp(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(origin = {12.5, -152.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_xn_zp(Gr = Gr_aP) annotation(Placement(transformation(origin = {32.5, -152.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_xn_yn(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(origin = {72.5, -152.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_xn_yn(Gr = Gr_aP) annotation(Placement(transformation(origin = {92.5, -152.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -90)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor_yn_zp(G = x_Panel * y_Panel * h_Panel) annotation(Placement(transformation(extent = {{115, -200}, {130, -185}})));
  Modelica.Thermal.HeatTransfer.Components.BodyRadiation bodyRadiation_yn_zp(Gr = Gr_aP) annotation(Placement(transformation(extent = {{115, -185}, {130, -170}})));
protected
  parameter Real Gr_oP(unit = "m2") = ViewFactor_parallel * y_Panel * z_Panel * 1 / (2 / eps_Panel - 1) "Net radiation conductance between two surfaces (see docu)(opposite Panels) tbd";
  parameter Real Gr_aP(unit = "m2") = ViewFactor_vertical * y_Panel * z_Panel * 1 / (2 / eps_Panel - 1) "Net radiation conductance between two surfaces (see docu)(adjoining Panels) tbd";
  parameter Real Gr_P_EB(unit = "m2") = x_EB * y_EB * eps_Panel * eps_EB / (eps_Panel + eps_EB - eps_Panel * eps_EB) "Net radiation conductance between two surfaces (see docu)(Panel - Electronic Box) tbd";
equation
  connect(Panel_zn.thermal_connector1, thermal_connector_zn) annotation(Line(points = {{283.6666564941406, 24.66666412353516}, {300, 35}}, thickness = 0.0625), AutoRoute = false);
  connect(EB_Pzn.port_a, thermalModel_ElectronicBox1.EB_zn) annotation(Line(points = {{194.6666564941406, -67}, {178.3333435058594, -81.66667175292969}}, color = {191, 0, 0}, thickness = 0.0625), AutoRoute = false);
  connect(thermalModel_ElectronicBox1.EB_zp, EB_Pzp.port_b) annotation(Line(points = {{146.6666564941406, -113.3333282470703}, {129.6666564941406, -130}}, color = {191, 0, 0}, thickness = 0.0625), AutoRoute = false);
  connect(Panel_zp.thermal_connector1, thermal_connector_zp) annotation(Line(points = {{41.33332824707031, -217.6666564941406}, {10, -250}}, thickness = 0.0625), AutoRoute = false);
  connect(EB_Pyn.port_a, thermalModel_ElectronicBox1.EB_yn) annotation(Line(points = {{161, -134.7}, {161, -129.7}, {161, -120}, {162.7, -120}, {162.7, -115}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_yn.thermal_connector1, thermal_connector_yn) annotation(Line(points = {{162.3, -207.7}, {162.3, -212.7}, {165, -212.7}, {165, -235}, {160, -235}}, thickness = 0.0625));
  connect(EB_Pxp.port_a, thermalModel_ElectronicBox1.EB_xp) annotation(Line(points = {{200.3, -97}, {195.3, -97}, {185, -97}, {185, -97.7}, {180, -97.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xp.thermal_connector1, thermal_connector_xp) annotation(Line(points = {{277.7, -97.7}, {282.7, -97.7}, {320, -97.7}, {320, -95}, {325, -95}}, thickness = 0.0625));
  connect(EB_Pxn.port_b, thermalModel_ElectronicBox1.EB_xn) annotation(Line(points = {{122.3, -97.3}, {127.3, -97.3}, {140, -97.3}, {140, -97.7}, {145, -97.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(EB_Pyp.port_b, thermalModel_ElectronicBox1.EB_yp) annotation(Line(points = {{162, -58.7}, {162, -63.7}, {162, -75}, {162.7, -75}, {162.7, -80}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_yp.thermal_connector1, thermal_connector_yp) annotation(Line(points = {{162.3, 4.7}, {162.3, 9.699999999999999}, {160, 9.699999999999999}, {160, 35}, {165, 35}}, thickness = 0.0625));
  connect(Panel_xn.thermal_connector1, thermal_connector_xn) annotation(Line(points = {{57.3, -97.3}, {52.3, -97.3}, {20, -97.3}, {20, -95}, {15, -95}}, thickness = 0.0625));
  connect(thermalModel_ElectronicBox1.dissipationPower, port_b) annotation(Line(points = {{162.6666564941406, -97.66667175292969}, {110, -45}}, color = {191, 0, 0}, thickness = 0.0625), AutoRoute = false);
  connect(Panel_yp.port_xn, EB_Pyp.port_a) annotation(Line(points = {{162.3, -4.7}, {162.3, -9.699999999999999}, {162.3, -40.3}, {162, -40.3}, {162, -45.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(EB_Pzn.port_b, Panel_zn.port_xn) annotation(Line(points = {{205.6666564941406, -56}, {276.3333435058594, 17.33333587646484}}, color = {191, 0, 0}, thickness = 0.0625), AutoRoute = false);
  connect(EB_Pxp.port_b, Panel_xp.port_xn) annotation(Line(points = {{213.7, -97}, {218.7, -97}, {262.3, -97}, {262.3, -97.7}, {267.3, -97.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_yn.port_xn, EB_Pyn.port_b) annotation(Line(points = {{162.3, -197.3}, {162.3, -192.3}, {162.3, -152.3}, {161, -152.3}, {161, -147.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_zp.port_xn, EB_Pzp.port_a) annotation(Line(points = {{48.66667175292969, -210.3333435058594}, {119.6666564941406, -139.6666717529297}}, color = {191, 0, 0}, thickness = 0.0625), AutoRoute = false);
  connect(Panel_xn.port_xn, EB_Pxn.port_a) annotation(Line(points = {{67.7, -97.3}, {72.7, -97.3}, {105, -97.3}, {110, -97.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_yn.port_xn, oposite_Panel_y.port_b) annotation(Line(points = {{162.3, -197.3}, {162.3, -192.3}, {162.3, -172}, {186, -172}, {186, -167}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(oposite_Panel_y.port_a, Panel_yp.port_xn) annotation(Line(points = {{186, -155}, {186, -150}, {186, -9.699999999999999}, {162.3, -9.699999999999999}, {162.3, -4.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(oposite_Panel_x.port_a, Panel_xn.port_xn) annotation(Line(points = {{110.3, -72}, {105.3, -72}, {72.7, -72}, {72.7, -97.3}, {67.7, -97.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xp.port_xn, oposite_Panel_x.port_b) annotation(Line(points = {{267.3333435058594, -97.66667175292969}, {260, -100}, {260, -75}, {130, -75}, {129, -72}, {123.6666564941406, -72}}, color = {191, 0, 0}, thickness = 0.0625), AutoRoute = false);
  connect(oposite_Panel_z.port_a, Panel_zp.port_xn) annotation(Line(points = {{200, -131.6666717529297}, {195, -132}, {190, -132}, {190, -210}, {48.66667175292969, -210.3333435058594}}, color = {191, 0, 0}, thickness = 0.0625), AutoRoute = false);
  connect(Panel_zn.port_xn, oposite_Panel_z.port_b) annotation(Line(points = {{276.3333435058594, 17.33333587646484}, {240, 12}, {240, -132}, {218, -132}, {213, -131.6666717529297}}, color = {191, 0, 0}, thickness = 0.0625), AutoRoute = false);
  connect(fixedHeatFlow1.port, port_b) annotation(Line(points = {{20, 10}, {25, 10}, {105, 10}, {105, -45}, {110, -45}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(tCS1.cooler_on, heater_cooler_EPS1.cooler_on) annotation(Line(points = {{-70, -30}, {-70, -35}, {-70, -45}, {-45, -45}, {-40, -45}}, color = {255, 0, 255}, thickness = 0.0625));
  connect(tCS1.heater_on, heater_cooler_EPS1.heater_on) annotation(Line(points = {{-80, -30}, {-80, -35}, {-45, -35}, {-40, -35}}, color = {255, 0, 255}, thickness = 0.0625));
  connect(tCS1.Tmin, heater_cooler_EPS1.Tmin) annotation(Line(points = {{-80, -10}, {-80, -5}, {-15, -5}, {-15, -35}, {-20, -35}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(tCS1.Tmax, heater_cooler_EPS1.Tmax) annotation(Line(points = {{-70, -10}, {-70, -5}, {-15, -5}, {-15, -45}, {-20, -45}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(tCS1.Temp, port_b) annotation(Line(points = {{-85, -20}, {-90, -20}, {-90, -45}, {105, -45}, {110, -45}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(heater_cooler_EPS1.Power_heating_cooling, port_b) annotation(Line(points = {{-30, -30}, {-30, -25}, {37.3, -25}, {37.3, -45}, {105, -45}, {110, -45}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xn.panel_surface1, panel_surface_xn) annotation(Line(points = {{57.3, -92.3}, {52.3, -92.3}, {20, -92.3}, {20, -75}, {15, -75}}, color = {255, 0, 0}, thickness = 0.0625));
  connect(Panel_yp.panel_surface1, panel_surface_yp) annotation(Line(points = {{167.7, 4.7}, {167.7, 9.699999999999999}, {167.7, 45}, {180, 45}, {185, 45}}, color = {255, 0, 0}, thickness = 0.0625));
  connect(Panel_zn.panel_surface1, panel_surface_zn) annotation(Line(points = {{287.3, 21}, {292.3, 21}, {315, 21}, {315, 10}, {320, 10}}, color = {255, 0, 0}, thickness = 0.0625));
  connect(Panel_xp.panel_surface1, panel_surface_xp) annotation(Line(points = {{277.7, -102.7}, {282.7, -102.7}, {325, -102.7}, {325, -115}, {330, -115}}, color = {255, 0, 0}, thickness = 0.0625));
  connect(Panel_yn.panel_surface1, panel_surface_yn) annotation(Line(points = {{157.3, -207.7}, {152.3, -207.7}, {140, -207.7}, {140, -235}, {135, -235}}, color = {255, 0, 0}, thickness = 0.0625));
  connect(Panel_zp.panel_surface1, panel_surface_zp) annotation(Line(points = {{37.7, -214}, {32.7, -214}, {5, -214}, {5, -230}, {0, -230}}, color = {255, 0, 0}, thickness = 0.0625));
  connect(Panel_xn.port_zn, thermalConductor_xn_zn.port_a) annotation(Line(points = {{60, -103.3}, {60, -108.3}, {50, -108.3}, {50, 42.3}, {55, 42.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xn_zn.port_b, Panel_zn.port_zn) annotation(Line(points = {{70, 42.3}, {75, 42.3}, {272.7, 42.3}, {272.7, 26.7}, {277.7, 26.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xn.port_xn, bodyRadiation_xn_zn.port_a) annotation(Line(points = {{67.7, -97.3}, {72.7, -97.3}, {72.7, -20}, {50, -20}, {50, 57.3}, {55, 57.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_xn_zn.port_b, Panel_zn.port_xn) annotation(Line(points = {{70, 57.3}, {75, 57.3}, {271.3, 57.3}, {271.3, 17.3}, {276.3, 17.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_yp.port_zn, thermalConductor_yp_zn.port_a) annotation(Line(points = {{156.7, 2.3}, {151.7, 2.3}, {151.7, 12.3}, {180, 12.3}, {185, 12.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_yp_zn.port_b, Panel_zn.port_yp) annotation(Line(points = {{200, 12.3}, {205, 12.3}, {268, 12.3}, {268, 22}, {273, 22}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_yp.port_xn, bodyRadiation_yp_zn.port_a) annotation(Line(points = {{162.3, -4.7}, {162.3, -9.699999999999999}, {171, -9.699999999999999}, {171, 27.3}, {180, 27.3}, {185, 27.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_yp_zn.port_b, Panel_zn.port_xn) annotation(Line(points = {{200, 27.3}, {205, 27.3}, {271.3, 27.3}, {271.3, 17.3}, {276.3, 17.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xp_yp.port_a, Panel_yp.port_yn) annotation(Line(points = {{220, -12.7}, {215, -12.7}, {173.7, -12.7}, {173.7, -3}, {168.7, -3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_yp.port_xn, bodyRadiation_xp_yp.port_a) annotation(Line(points = {{162.3, -4.7}, {162.3, -9.699999999999999}, {188.7, -9.699999999999999}, {188.7, 2.3}, {215, 2.3}, {220, 2.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xp_yp.port_b, Panel_xp.port_yp) annotation(Line(points = {{235, -12.7}, {240, -12.7}, {268, -12.7}, {268, -86.7}, {268, -91.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_xp_yp.port_b, Panel_xp.port_xn) annotation(Line(points = {{235, 2.3}, {240, 2.3}, {262.3, 2.3}, {262.3, -97.7}, {267.3, -97.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_zn.port_yn, thermalConductor_yn_zn.port_a) annotation(Line(points = {{282, 14.3}, {287, 14.3}, {302.7, 14.3}, {302.7, -115}, {302.7, -120}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_yn_zn.port_a, Panel_zn.port_xn) annotation(Line(points = {{322.7, -120}, {322.7, -115}, {322.7, 17.3}, {281.3, 17.3}, {276.3, 17.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_yn.port_zn, thermalConductor_yn_zn.port_b) annotation(Line(points = {{168.3, -205}, {173.3, -205}, {302.3, -205}, {302.3, -140}, {302.3, -135}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_yn_zn.port_b, Panel_yn.port_xn) annotation(Line(points = {{322.3, -135}, {322.3, -140}, {322.3, -192.3}, {162.3, -192.3}, {162.3, -197.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xp.port_yn, thermalConductor_xp_yn.port_a) annotation(Line(points = {{269, -103.7}, {269, -108.7}, {269, -150}, {272.7, -150}, {272.7, -155}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xp_yn.port_b, Panel_yn.port_yp) annotation(Line(points = {{272.3, -170}, {272.3, -175}, {272.3, -198}, {173.3, -198}, {168.3, -198}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xp.port_xn, bodyRadiation_xp_yn.port_a) annotation(Line(points = {{267.3, -97.7}, {262.3, -97.7}, {262.3, -123.7}, {292.7, -123.7}, {292.7, -150}, {292.7, -155}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_xp_yn.port_b, Panel_yn.port_xn) annotation(Line(points = {{292.3, -170}, {292.3, -175}, {292.3, -192.3}, {162.3, -192.3}, {162.3, -197.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xp.port_xn, bodyRadiation_xp_zn.port_b) annotation(Line(points = {{267.3, -97.7}, {262.3, -97.7}, {262.3, -79}, {317.3, -79}, {317.3, -60}, {317.3, -55}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_zn.port_xn, bodyRadiation_xp_zn.port_a) annotation(Line(points = {{276.3, 17.3}, {281.3, 17.3}, {317.7, 17.3}, {317.7, -35}, {317.7, -40}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xp.port_zn, thermalConductor_xp_zn.port_b) annotation(Line(points = {{275, -91.7}, {275, -86.7}, {275, -60}, {297.3, -60}, {297.3, -55}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_zn.port_zp, thermalConductor_xp_zn.port_a) annotation(Line(points = {{277.7, 10}, {282.7, 10}, {297.7, 10}, {297.7, -35}, {297.7, -40}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xp_zp.port_a, Panel_xp.port_zp) annotation(Line(points = {{227.7, -165}, {227.7, -160}, {227.7, -103.7}, {258, -103.7}, {263, -103.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xp.port_xn, bodyRadiation_xp_zp.port_a) annotation(Line(points = {{267.3, -97.7}, {262.3, -97.7}, {247.7, -97.7}, {247.7, -160}, {247.7, -165}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xp_zp.port_b, Panel_zp.port_zn) annotation(Line(points = {{227.3, -180}, {227.3, -185}, {227.3, -220}, {52.3, -220}, {47.3, -220}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_zp.port_xn, bodyRadiation_xp_zp.port_b) annotation(Line(points = {{48.7, -210.3}, {53.7, -210.3}, {247.3, -210.3}, {247.3, -185}, {247.3, -180}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xn_yp.port_b, Panel_xn.port_yn) annotation(Line(points = {{22.3, -65}, {22.3, -70}, {22.3, -86.3}, {66, -86.3}, {66, -91.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xn_yp.port_a, Panel_yp.port_yp) annotation(Line(points = {{22.7, -50}, {22.7, -45}, {22.7, -8.699999999999999}, {156.7, -8.699999999999999}, {156.7, -3.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xn.port_xn, bodyRadiation_xn_yp.port_b) annotation(Line(points = {{67.7, -97.3}, {72.7, -97.3}, {72.7, -83.7}, {42.3, -83.7}, {42.3, -70}, {42.3, -65}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_xn_yp.port_a, Panel_yp.port_xn) annotation(Line(points = {{42.7, -50}, {42.7, -45}, {42.7, -9.699999999999999}, {162.3, -9.699999999999999}, {162.3, -4.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_yp_zp.port_a, Panel_yp.port_zp) annotation(Line(points = {{62.7, -55}, {62.7, -50}, {62.7, -13.3}, {168.7, -13.3}, {168.7, -8.300000000000001}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_yp_zp.port_a, Panel_yp.port_xn) annotation(Line(points = {{82.7, -55}, {82.7, -50}, {82.7, -9.699999999999999}, {162.3, -9.699999999999999}, {162.3, -4.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_yp_zp.port_b, Panel_zp.port_yp) annotation(Line(points = {{62.3, -70}, {62.3, -75}, {62.3, -215.3}, {57, -215.3}, {52, -215.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_yp_zp.port_b, Panel_zp.port_xn) annotation(Line(points = {{82.3, -70}, {82.3, -75}, {82.3, -210.3}, {53.7, -210.3}, {48.7, -210.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xn_zp.port_b, Panel_zp.port_zp) annotation(Line(points = {{12.3, -160}, {12.3, -165}, {12.3, -203}, {42.3, -203}, {47.3, -203}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xn_zp.port_a, Panel_xn.port_zp) annotation(Line(points = {{12.7, -145}, {12.7, -140}, {77, -140}, {77, -91.3}, {72, -91.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_xn_zp.port_b, Panel_zp.port_xn) annotation(Line(points = {{32.3, -160}, {32.3, -165}, {32.3, -210.3}, {43.7, -210.3}, {48.7, -210.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_xn_zp.port_a, Panel_xn.port_xn) annotation(Line(points = {{32.7, -145}, {32.7, -140}, {72.7, -140}, {72.7, -97.3}, {67.7, -97.3}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xn.port_yp, thermalConductor_xn_yn.port_a) annotation(Line(points = {{67, -103.3}, {67, -108.3}, {67, -140}, {72.7, -140}, {72.7, -145}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_xn.port_xn, bodyRadiation_xn_yn.port_a) annotation(Line(points = {{67.7, -97.3}, {72.7, -97.3}, {92.7, -97.3}, {92.7, -140}, {92.7, -145}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_xn_yn.port_b, Panel_yn.port_yn) annotation(Line(points = {{72.3, -160}, {72.3, -165}, {72.3, -199}, {151.3, -199}, {156.3, -199}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_yn.port_zp, bodyRadiation_xn_yn.port_b) annotation(Line(points = {{156.3, -193}, {156.3, -188}, {156.3, -165}, {92.3, -165}, {92.3, -160}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_zp.port_yn, thermalConductor_yn_zp.port_a) annotation(Line(points = {{43, -207.3}, {48, -207.3}, {110, -207.3}, {110, -192.7}, {115, -192.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Panel_zp.port_xn, bodyRadiation_yn_zp.port_a) annotation(Line(points = {{48.7, -210.3}, {53.7, -210.3}, {110, -210.3}, {110, -177.7}, {115, -177.7}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductor_yn_zp.port_b, Panel_yn.port_zp) annotation(Line(points = {{130, -192.7}, {135, -192.7}, {135, -188}, {156.3, -188}, {156.3, -193}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(bodyRadiation_yn_zp.port_b, Panel_yn.port_xn) annotation(Line(points = {{130, -177.7}, {135, -177.7}, {162.3, -177.7}, {162.3, -192.3}, {162.3, -197.3}}, color = {191, 0, 0}, thickness = 0.0625));
  annotation(port_b(T(flags = 2), Q_flow(flags = 2)), Panel_xp(combiTable1Ds1(y(flags = 2))), Panel_xn(combiTable1Ds1(y(flags = 2))), Panel_yp(combiTable1Ds1(y(flags = 2))), Panel_yn(combiTable1Ds1(y(flags = 2))), Panel_zn(combiTable1Ds1(y(flags = 2))), Panel_zp(combiTable1Ds1(y(flags = 2))), fixedHeatFlow1(port(Q_flow(flags = 2))), heater_cooler_EPS1(heating_power(y(flags = 2)), heater_power(port(Q_flow(flags = 2))), cooling_power(y(flags = 2)), cooler_power(port(Q_flow(flags = 2))), lower_Temp(y(flags = 2)), upper_Temp(y(flags = 2))), Icon(graphics = {Rectangle(lineColor = {255, 0, 0}, fillColor = {255, 255, 255}, fillPattern = FillPattern.CrossDiag, extent = {{-10, -50}, {10, 50}}), Rectangle(lineColor = {255, 0, 0}, fillColor = {255, 255, 255}, fillPattern = FillPattern.CrossDiag, extent = {{-10.2751, -50}, {9.7249, 50}}), Rectangle(lineColor = {255, 0, 0}, fillColor = {255, 255, 255}, fillPattern = FillPattern.CrossDiag, extent = {{-50, -10}, {50, 10}}), Rectangle(lineColor = {255, 0, 0}, fillColor = {255, 255, 255}, fillPattern = FillPattern.CrossDiag, extent = {{-50, -10}, {50, 10}}), Rectangle(lineColor = {255, 0, 0}, fillColor = {255, 255, 255}, lineThickness = 2, extent = {{-80, -80}, {80, 80}}), Text(textString = "%name", textStyle = {TextStyle.Bold}, lineColor = {0, 0, 0}, fillColor = {255, 0, 0}, fillPattern = FillPattern.Solid, extent = {{-78.4853, -65.66710000000001}, {78.4853, -25.6671}}), Text(textString = "yp", lineColor = {0, 0, 0}, fillPattern = FillPattern.Solid, extent = {{-12.0277, 70.2527}, {14.7787, 93.1585}}), Text(textString = "yn", lineColor = {0, 0, 0}, fillPattern = FillPattern.Solid, extent = {{-12.3028, -89.8573}, {14.5036, -66.9515}}), Text(textString = "xp", lineColor = {0, 0, 0}, fillPattern = FillPattern.Solid, extent = {{67.47709999999999, -10.6276}, {94.2835, 12.2782}}), Text(textString = "xn", lineColor = {0, 0, 0}, fillPattern = FillPattern.Solid, extent = {{-92.63290000000001, -12.5533}, {-65.8265, 10.3525}}), Text(textString = "zp", lineColor = {0, 0, 0}, fillPattern = FillPattern.Solid, extent = {{-79.428, -79.95359999999999}, {-52.6216, -57.0478}}), Text(textString = "zn", lineColor = {0, 0, 0}, fillPattern = FillPattern.Solid, extent = {{55.2109, 58.9977}, {82.01730000000001, 81.90349999999999}})}), Documentation(info = "<HTML>
<P>
A constant voltage of 10 V is applied to a
temperature dependent resistor of 10*(1+(T-20C)/(235+20C)) Ohms,
whose losses v**2/r are dissipated via a
thermal conductance of 0.1 W/K to ambient temperature 20 degree C.
The resistor is assumed to have a thermal capacity of 1 J/K,
having ambient temparature at the beginning of the experiment.
The temperature of this heating resistor is held by an OnOff-controller
at reference temperature within a given bandwith +/- 1 K
by switching on and off the voltage source.
The reference temperature starts at 25 degree C
and rises between t = 2 and 8 seconds linear to 50 degree C.
An approppriate simulating time would be 10 seconds.
</P>
</HTML>
"), experiment(StopTime = 1, StartTime = 0, Interval = 0.001));
end BuildingBlock_optical_properties_var_rad;