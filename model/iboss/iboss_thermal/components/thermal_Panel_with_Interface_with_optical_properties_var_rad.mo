within iboss.iboss_thermal.components;

model thermal_Panel_with_Interface_with_optical_properties_var_rad "Seitenpanel mit Schnittstelle mit alpha - epsilon"
  parameter Modelica.SIunits.Emissivity alpha_Rad = 0.44 "Absorptionskoeffizient des Radiators";
  parameter Modelica.SIunits.Emissivity alpha_TSS = 0.9 "Absorptionskoeffizient der thermalen Schnittstelle";
  parameter Modelica.SIunits.Emissivity alpha_MSS = 0.4 "Absorptionskoeffizient der mechanischen Schnittstelle";
  parameter Modelica.SIunits.Emissivity alpha_ESS = 0.3 "Absorptionskoeffizient der elektrischen Schnittstelle";
  parameter Modelica.SIunits.Emissivity epsilon_Rad = 0.5600000000000001 "Emmisionskoeffizient des Radiators tbd";
  parameter Modelica.SIunits.Emissivity epsilon_TSS = 0.1 "Emmisionskoeffizient der thermalen Schnittstelle tbd";
  parameter Modelica.SIunits.Emissivity epsilon_MSS = 0.4 "Emmisionskoeffizient der mechanischen Schnittstelle tbd";
  parameter Modelica.SIunits.Emissivity epsilon_ESS = 0.3 "Emmisionskoeffizient der elektrischen Schnittstelle tbd Materialdatenbank";
  Schnittstelle schnittstelle1(x_ESS = x_ESS, y_ESS = y_ESS, z_ESS = z_ESS, x_MSS = x_MSS, y_MSS = y_MSS, z_MSS = z_MSS, x_TSS = x_TSS, y_TSS = y_TSS, z_TSS = z_TSS, material_ESS = material_ESS, material_MSS = material_MSS, material_TSS = material_TSS) annotation(material_ESS(choicesAllMatching = true), material_MSS(choicesAllMatching = true), material_TSS(choicesAllMatching = true), ESS(material(choicesAllMatching = true)), MSS(material(choicesAllMatching = true)), TSS(material(choicesAllMatching = true)), Placement(transformation(origin = {20, 0}, extent = {{-10, -10}, {10, 10}})));
  thermal_element BuildingBlock_Panel(material = material_Panel, x = x_Panel, y = y_Panel, z = z_Panel) annotation(material(choicesAllMatching = true), Placement(transformation(origin = {-20, -0}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a port_xn annotation(Placement(transformation(origin = {-55, -1}, extent = {{-10, -10}, {10, 10}}), iconTransformation(origin = {-30, 0}, extent = {{-10, -10}, {10, 10}})));
  thermal_connector thermal_connector1 annotation(Placement(transformation(origin = {50, -1}, extent = {{-10, -10}, {10, 10}}, rotation = -180), iconTransformation(origin = {30, 0}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b port_zp annotation(Placement(transformation(extent = {{-65, -46}, {-45, -26}})));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a port_yn annotation(Placement(transformation(extent = {{-30, -46}, {-10, -26}})));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b port_yp annotation(Placement(transformation(extent = {{-35, 24}, {-15, 44}})));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a port_zn annotation(Placement(transformation(extent = {{5, 24}, {25, 44}})));
  panel_surface panel_surface1 annotation(Placement(transformation(extent = {{20, 20}, {40, 40}}, rotation = -90)));
  parameter Modelica.SIunits.Height x_ESS = 0.08 "length of ESS in m";
  parameter Modelica.SIunits.Height y_ESS = 0.01 "height of ESS in m";
  parameter Modelica.SIunits.Height z_ESS = 0.01 "width of ESS in m";
  parameter Modelica.SIunits.Height x_MSS = 0.05 "length of MSS in m";
  parameter Modelica.SIunits.Height y_MSS = 0.08 "height of MSS in m";
  parameter Modelica.SIunits.Height z_MSS = 0.08 "width of MSS in m";
  parameter Modelica.SIunits.Height x_TSS = 0.03 "length of TSS in m";
  parameter Modelica.SIunits.Height y_TSS = 0.25 "height of TSS in m";
  parameter Modelica.SIunits.Height z_TSS = 0.25 "width of TSS in m";
  parameter Modelica.SIunits.Height x_Panel = 0.03 "thickness of Panel in m";
  parameter Modelica.SIunits.Height y_Panel = 0.4 "height of Panel in m";
  parameter Modelica.SIunits.Height z_Panel = 0.4 "width of Panel in m";
  parameter MaterialDatabase.Material material_ESS = MaterialDatabase.Kupferlegierungen_Kupfer() "Material of ESS from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}})), choicesAllMatching = true);
  parameter MaterialDatabase.Material material_MSS = MaterialDatabase.Aluminiumlegierungen_1060_Legierung() "Material of MSS from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}})), choicesAllMatching = true);
  parameter MaterialDatabase.Material material_TSS = MaterialDatabase.Kupferlegierungen_Kupfer() "Material of TSS from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}})), choicesAllMatching = true);
  parameter MaterialDatabase.Material material_Panel = MaterialDatabase.Kohlenstofffasern_Carbon_Panel_tbd() "Material of TSS from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}})), choicesAllMatching = true);
  Modelica.Blocks.Sources.Constant A_Rad(k = y_Panel * z_Panel - (y_TSS * z_TSS + y_MSS * z_MSS + y_ESS * z_ESS)) annotation(Placement(transformation(extent = {{105, 34}, {125, 54}})));
  Modelica.Blocks.Sources.Constant A_TSS(k = y_TSS * z_TSS) annotation(Placement(transformation(extent = {{105, 4}, {125, 24}})));
  Modelica.Blocks.Sources.Constant A_MSS(k = y_MSS * z_MSS) annotation(Placement(transformation(extent = {{105, -26}, {125, -6}})));
  Modelica.Blocks.Sources.Constant A_ESS(k = y_ESS * z_ESS) annotation(Placement(transformation(extent = {{105, -56}, {125, -36}})));
  Modelica.Blocks.Sources.Constant alphaTSS(k = alpha_TSS) annotation(Placement(transformation(extent = {{-85, -91}, {-65, -71}})));
  Modelica.Blocks.Sources.Constant alphaMSS(k = alpha_MSS) annotation(Placement(transformation(extent = {{-55, -91}, {-35, -71}})));
  Modelica.Blocks.Sources.Constant alphaESS(k = alpha_ESS) annotation(Placement(transformation(extent = {{-25, -91}, {-5, -71}})));
  Modelica.Blocks.Sources.Constant epsilonTSS(k = epsilon_TSS) annotation(Placement(transformation(extent = {{-85, -126}, {-65, -106}})));
  Modelica.Blocks.Sources.Constant epsilonMSS(k = epsilon_MSS) annotation(Placement(transformation(extent = {{-55, -126}, {-35, -106}})));
  Modelica.Blocks.Sources.Constant epsilonESS(k = epsilon_ESS) annotation(Placement(transformation(extent = {{-25, -126}, {-5, -106}})));
  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temperatureSensor1 annotation(Placement(transformation(extent = {{5, 59}, {25, 79}})));
  Modelica.Blocks.Tables.CombiTable1Ds combiTable1Ds1(tableOnFile = true, table = [250, 0.5, 0.9; 290, 0.7, 0.7], tableName = "thermochromLaCaMnO3", fileName = "/home/jens/iBOSS2/Simulation_Linux/ibosssim/model/iboss/thermochrom_alpha_epsilon.txt", smoothness = Modelica.Blocks.Types.Smoothness.ContinuousDerivative) annotation(Placement(transformation(extent = {{50, 59}, {70, 79}})));
equation
  connect(BuildingBlock_Panel.port_b_xp, schnittstelle1.port_a) annotation(Line(points = {{-10, 0}, {-5, 0}, {12.3, 0}, {17.3, 0}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(schnittstelle1.ESS_IF, thermal_connector1.ESS) annotation(Line(points = {{30, 5}, {35, 5}, {45, 5}, {45, -1}, {50, -1}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(schnittstelle1.TSS_IF, thermal_connector1.TSS) annotation(Line(points = {{30, -5}, {35, -5}, {45, -5}, {45, -1}, {50, -1}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(schnittstelle1.MSS_IF, thermal_connector1.MSS) annotation(Line(points = {{30, 0}, {35, 0}, {45, 0}, {45, -1}, {50, -1}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(BuildingBlock_Panel.port_b_xp, thermal_connector1.Rad) annotation(Line(points = {{-10, 0}, {-5, 0}, {45, 0}, {45, -1}, {50, -1}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(BuildingBlock_Panel.port_b_yp, port_yp) annotation(Line(points = {{-20, 9}, {-20, 14}, {-20, 34}, {-25, 34}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(BuildingBlock_Panel.port_a_zn, port_zn) annotation(Line(points = {{-15, 6.7}, {-15, 11.7}, {-15, 34}, {10, 34}, {15, 34}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(BuildingBlock_Panel.port_a_xn, port_xn) annotation(Line(points = {{-30.3, 0}, {-35.3, 0}, {-50, 0}, {-50, -1}, {-55, -1}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(BuildingBlock_Panel.port_b_zp, port_zp) annotation(Line(points = {{-25, -4.7}, {-30, -4.7}, {-50, -4.7}, {-50, -36}, {-55, -36}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(BuildingBlock_Panel.port_a_yn, port_yn) annotation(Line(points = {{-20, -6}, {-20, -11}, {-15, -11}, {-15, -36}, {-20, -36}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(A_Rad.y, panel_surface1.A_Rad) annotation(Line(points = {{126, 44}, {131, 44}, {131, -30}, {35, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(A_TSS.y, panel_surface1.A_TSS) annotation(Line(points = {{126, 14}, {131, 14}, {131, -30}, {35, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(A_MSS.y, panel_surface1.A_MSS) annotation(Line(points = {{126, -16}, {131, -16}, {131, -30}, {35, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(A_ESS.y, panel_surface1.A_ESS) annotation(Line(points = {{126, -46}, {131, -46}, {131, -30}, {35, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(alphaESS.y, panel_surface1.alpha_ESS) annotation(Line(points = {{-4, -81}, {1, -81}, {25, -81}, {25, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(alphaMSS.y, panel_surface1.alpha_MSS) annotation(Line(points = {{-34, -81}, {-29, -81}, {25, -81}, {25, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(alphaTSS.y, panel_surface1.alpha_TSS) annotation(Line(points = {{-64, -81}, {-59, -81}, {25, -81}, {25, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(epsilonESS.y, panel_surface1.epsilon_ESS) annotation(Line(points = {{-4, -116}, {1, -116}, {25, -116}, {25, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(epsilonMSS.y, panel_surface1.epsilon_MSS) annotation(Line(points = {{-34, -116}, {-29, -116}, {25, -116}, {25, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(epsilonTSS.y, panel_surface1.epsilon_TSS) annotation(Line(points = {{-64, -116}, {-59, -116}, {25, -116}, {25, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(temperatureSensor1.port, BuildingBlock_Panel.port_b_xp) annotation(Line(points = {{5, 69}, {0, 69}, {-5, 69}, {-5, 0}, {-10, 0}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(temperatureSensor1.T, combiTable1Ds1.u) annotation(Line(points = {{25, 69}, {30, 69}, {43, 69}, {48, 69}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(combiTable1Ds1.y[1], panel_surface1.epsilon_Rad) annotation(Line(points = {{71, 69}, {76, 69}, {76, -30}, {35, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(combiTable1Ds1.y[2], panel_surface1.alpha_Rad) annotation(Line(points = {{71, 69}, {76, 69}, {76, -30}, {35, -30}, {30, -30}}, color = {0, 0, 127}, thickness = 0.0625));
  annotation(combiTable1Ds1(y(flags = 2)), Icon(coordinateSystem(grid = {10, 10}), graphics = {Rectangle(lineColor = {255, 0, 0}, fillColor = {255, 255, 255}, fillPattern = FillPattern.VerticalCylinder, extent = {{-10, -100}, {10, 100}}, visible = true, origin = {-10, 0}), Rectangle(lineColor = {255, 0, 0}, fillColor = {255, 255, 255}, fillPattern = FillPattern.CrossDiag, extent = {{-10, -50}, {10, 50}}, visible = true, origin = {10, 0}), Text(textString = "%name", textStyle = {TextStyle.Bold}, fillPattern = FillPattern.Solid, extent = {{-100, -20}, {100, 20}}, visible = true, rotation = 90)}), Diagram(coordinateSystem(extent = {{-105, -74}, {105, 74}}, grid = {5, 5})), experiment(StopTime = 1, StartTime = 0));
end thermal_Panel_with_Interface_with_optical_properties_var_rad;