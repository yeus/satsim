within iboss.iboss_thermal.components;

model thermal_element_opt_prop "thermal_element_opt_prop.mo"
  import iboss.*;
  surface_properties_out xp "optical properties of the outer surface of the side panel" annotation(Placement(transformation(extent = {{105, -51}, {125, -31}}), iconTransformation(origin = {100, 0}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  surface_properties_out xn "optical properties of the outer surface of the side panel" annotation(Placement(transformation(extent = {{-115, -46}, {-95, -26}}), iconTransformation(origin = {-100, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  surface_properties_out yp annotation(Placement(transformation(extent = {{-35, 29}, {-15, 49}}), iconTransformation(origin = {0, -25}, extent = {{-10, 90}, {10, 110}})));
  surface_properties_out zp "optical properties of the outer surface of the side panel" annotation(Placement(transformation(extent = {{-85, -101}, {-65, -81}}), iconTransformation(origin = {0, 50}, extent = {{-60, -110}, {-40, -90}})));
  surface_properties_out zn annotation(Placement(transformation(extent = {{50, -21}, {70, -1}}), iconTransformation(origin = {0, -50}, extent = {{40, 90}, {60, 110}})));
  surface_properties_out yn "optical properties of the outer surface of the side panel" annotation(Placement(transformation(extent = {{-10, -141}, {10, -121}}), iconTransformation(origin = {0, -75}, extent = {{-10, -10}, {10, 10}}, rotation = -180)));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b dissipation_power if dissipation_power_on "Thermal port for 1-dim. heat transfer (unfilled rectangular icon)" annotation(Placement(transformation(extent = {{-40, -16}, {-20, 4}})));
  parameter Boolean dissipation_power_on = false "true if component has a disipation power(connection to electrical simulation)";
  parameter Boolean var_rad_xn = false "variable radiator or fixed alpha/epsilon in xn direction";
  parameter Boolean var_rad_xp = false "variable radiator or fixed alpha/epsilon in xp direction";
  parameter Boolean var_rad_yn = false "variable radiator or fixed alpha/epsilon in yn direction";
  parameter Boolean var_rad_yp = false "variable radiator or fixed alpha/epsilon in yp direction";
  parameter Boolean var_rad_zn = false "variable radiator or fixed alpha/epsilon in zn direction";
  parameter Boolean var_rad_zp = false "variable radiator or fixed alpha/epsilon in zp direction";
  parameter Modelica.SIunits.HeatFlowRate Q_flow_dissipation = 0 if dissipation_power_on "Fixed heat flow rate at port";
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalconductorrechts_x(G = Gx / 2) annotation(Placement(transformation(origin = {47, -31}, extent = {{-12, -12}, {0, 0}})));
  Modelica.Thermal.HeatTransfer.Components.HeatCapacitor heatcapacitor1(C = C, T(fixed = true)) annotation(Placement(transformation(origin = {2, -18}, extent = {{-12, -12}, {12, 12}})));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductorlinks_x(G = Gx / 2) annotation(Placement(transformation(origin = {-30, -36}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductorunten_y(G = Gy / 2) annotation(Placement(transformation(origin = {-2.4, -73.59999999999999}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = -270)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductoroben_y(G = Gy / 2) annotation(Placement(transformation(origin = {-5, 14}, extent = {{-10, -10}, {5, 5}}, rotation = -270)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductorhinten_z(G = Gz / 2) annotation(Placement(transformation(origin = {25, -15}, extent = {{-10, -10}, {10, 10}}, rotation = -135)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductorvorne_z(G = Gz / 2) annotation(Placement(transformation(origin = {-35, -60}, extent = {{-10, -10}, {10, 10}}, rotation = -135)));
  parameter MaterialDatabase.Material material = MaterialDatabase.Aluminiumlegierungen_6061_Legierung() "Material from MaterialDataBase" annotation(Placement(transformation(extent = {{-10, -61}, {10, -41}})), choicesAllMatching = true);
  parameter Modelica.SIunits.Length x = 1 "Laenge des Materials in x Richtung der Waermeausbreitung";
  parameter Modelica.SIunits.Length y = 1 "Laenge des Materials in y Richtung der Waermeausbreitung";
  parameter Modelica.SIunits.Length z = 1 "Laenge des Materials in z Richtung der Waermeausbreitung";
  parameter OpticalPropertiesDatabase.OpticalProperties opticalProperties_xn = OpticalPropertiesDatabase.Schwarze_Beschichtungen_IMAGECURE_XV501T_4() if not var_rad_xn annotation(Placement(transformation(extent = {{125, -101}, {145, -81}})), choicesAllMatching = true);
  parameter OpticalPropertiesDatabase.OpticalProperties opticalProperties_xp = OpticalPropertiesDatabase.Schwarze_Beschichtungen_Deep_Sky_Black() if not var_rad_xp annotation(Placement(transformation(extent = {{125, -101}, {145, -81}})), choicesAllMatching = true);
  parameter OpticalPropertiesDatabase.OpticalProperties opticalProperties_yn = OpticalPropertiesDatabase.Schwarze_Beschichtungen_C_black_Anfang() if not var_rad_yn annotation(Placement(transformation(extent = {{125, -101}, {145, -81}})), choicesAllMatching = true);
  parameter OpticalPropertiesDatabase.OpticalProperties opticalProperties_yp = OpticalPropertiesDatabase.Schwarze_Beschichtungen_Z306_Ende() if not var_rad_yp annotation(Placement(transformation(extent = {{125, -101}, {145, -81}})), choicesAllMatching = true);
  parameter OpticalPropertiesDatabase.OpticalProperties opticalProperties_zn = OpticalPropertiesDatabase.Schwarze_Beschichtungen_N_150_1() if not var_rad_zn annotation(Placement(transformation(extent = {{125, -101}, {145, -81}})), choicesAllMatching = true);
  parameter OpticalPropertiesDatabase.OpticalProperties opticalProperties_zp = OpticalPropertiesDatabase.Schwarze_Beschichtungen_Pyromark_1200() if not var_rad_zp annotation(Placement(transformation(extent = {{125, -101}, {145, -81}})), choicesAllMatching = true);
  Modelica.Blocks.Sources.Constant epsilon_xp(k = opticalProperties_xp.epsilon) if not var_rad_xp annotation(Placement(transformation(extent = {{55, -101}, {75, -81}})));
  Modelica.Blocks.Sources.Constant alpha_xp(k = opticalProperties_xp.alpha) if not var_rad_xp annotation(Placement(transformation(extent = {{55, -71}, {75, -51}})));
  Modelica.Blocks.Sources.Constant epsilon_xn(k = opticalProperties_xn.epsilon) if not var_rad_xn annotation(Placement(transformation(extent = {{-70, -26}, {-50, -6}})));
  Modelica.Blocks.Sources.Constant alpha_xn(k = opticalProperties_xn.alpha) if not var_rad_xn annotation(Placement(transformation(extent = {{-70, 4}, {-50, 24}})));
  Modelica.Blocks.Sources.Constant epsilon_yp(k = opticalProperties_yp.epsilon) if not var_rad_yp annotation(Placement(transformation(extent = {{15, 4}, {35, 24}})));
  Modelica.Blocks.Sources.Constant alpha_yp(k = opticalProperties_yp.alpha) if not var_rad_yp annotation(Placement(transformation(extent = {{15, 34}, {35, 54}})));
  Modelica.Blocks.Sources.Constant epsilon_yn(k = opticalProperties_yn.epsilon) if not var_rad_yn annotation(Placement(transformation(extent = {{15, -91}, {35, -71}})));
  Modelica.Blocks.Sources.Constant alpha_yn(k = opticalProperties_yn.alpha) if not var_rad_yn annotation(Placement(transformation(extent = {{15, -121}, {35, -101}})));
  Modelica.Blocks.Sources.Constant epsilon_zp(k = opticalProperties_zp.epsilon) if not var_rad_zp annotation(Placement(transformation(extent = {{-40, -146}, {-20, -126}})));
  Modelica.Blocks.Sources.Constant alpha_zp(k = opticalProperties_zp.alpha) if not var_rad_zp annotation(Placement(transformation(extent = {{-40, -116}, {-20, -96}})));
  Modelica.Blocks.Sources.Constant epsilon_zn(k = opticalProperties_zn.epsilon) if not var_rad_zn annotation(Placement(transformation(extent = {{75, -6}, {95, 14}})));
  Modelica.Blocks.Sources.Constant alpha_zn(k = opticalProperties_zn.alpha) if not var_rad_zn annotation(Placement(transformation(extent = {{75, 24}, {95, 44}})));
  Modelica.Blocks.Sources.Constant Area_xp(k = A_x) annotation(Placement(transformation(extent = {{60, -131}, {80, -111}})));
  Modelica.Blocks.Sources.Constant Area_xn(k = A_x) annotation(Placement(transformation(extent = {{-70, 34}, {-50, 54}})));
  Modelica.Blocks.Sources.Constant Area_yn(k = A_y) annotation(Placement(transformation(extent = {{15, -151}, {35, -131}})));
  Modelica.Blocks.Sources.Constant Area_yp(k = A_y) annotation(Placement(transformation(extent = {{45, 34}, {65, 54}})));
  Modelica.Blocks.Sources.Constant Area_zn(k = A_z) annotation(Placement(transformation(extent = {{110, -6}, {130, 14}})));
  Modelica.Blocks.Sources.Constant Area_zp(k = A_z) annotation(Placement(transformation(extent = {{-70, -146}, {-50, -126}})));
  Modelica.Thermal.HeatTransfer.Sources.FixedHeatFlow fixed_dissipation_HeatFlow(Q_flow = Q_flow_dissipation) if dissipation_power_on annotation(Placement(transformation(extent = {{-40, 9}, {-20, 29}})));
  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temperatureSensor_yp if var_rad_yp annotation(Placement(transformation(extent = {{5, 59}, {25, 79}})));
  Modelica.Blocks.Tables.CombiTable1Ds combiTable1Ds1_yp(tableOnFile = true, table = [250, 0.5, 0.9; 290, 0.7, 0.7], tableName = "thermochromLaCaMnO3", fileName = "/home/jens/iBOSS2/Simulation_Linux/ibosssim/model/iboss/thermochrom_alpha_epsilon.txt", smoothness = Modelica.Blocks.Types.Smoothness.ContinuousDerivative) if var_rad_yp annotation(Placement(transformation(extent = {{50, 59}, {70, 79}})));
  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temperatureSensor_xp if var_rad_xp annotation(Placement(transformation(extent = {{185, -46}, {205, -26}})));
  Modelica.Blocks.Tables.CombiTable1Ds combiTable1Ds1_xp(tableOnFile = true, table = [250, 0.5, 0.9; 290, 0.7, 0.7], tableName = "thermochromLaCaMnO3", fileName = "/home/jens/iBOSS2/Simulation_Linux/ibosssim/model/iboss/thermochrom_alpha_epsilon.txt", smoothness = Modelica.Blocks.Types.Smoothness.ContinuousDerivative) if var_rad_xp annotation(Placement(transformation(extent = {{230, -46}, {250, -26}})));
  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temperatureSensor_zn if var_rad_zn annotation(Placement(transformation(extent = {{160, 39}, {180, 59}})));
  Modelica.Blocks.Tables.CombiTable1Ds combiTable1Ds1_zn(tableOnFile = true, table = [250, 0.5, 0.9; 290, 0.7, 0.7], tableName = "thermochromLaCaMnO3", fileName = "/home/jens/iBOSS2/Simulation_Linux/ibosssim/model/iboss/thermochrom_alpha_epsilon.txt", smoothness = Modelica.Blocks.Types.Smoothness.ContinuousDerivative) if var_rad_zn annotation(Placement(transformation(extent = {{205, 39}, {225, 59}})));
  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temperatureSensor_xn if var_rad_xn annotation(Placement(transformation(extent = {{-150, -81}, {-130, -61}})));
  Modelica.Blocks.Tables.CombiTable1Ds combiTable1Ds1_xn(tableOnFile = true, table = [250, 0.5, 0.9; 290, 0.7, 0.7], tableName = "thermochromLaCaMnO3", fileName = "/home/jens/iBOSS2/Simulation_Linux/ibosssim/model/iboss/thermochrom_alpha_epsilon.txt", smoothness = Modelica.Blocks.Types.Smoothness.ContinuousDerivative) if var_rad_xn annotation(Placement(transformation(extent = {{-120, -81}, {-100, -61}})));
  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temperatureSensor_zp if var_rad_zp annotation(Placement(transformation(extent = {{-145, -146}, {-125, -126}})));
  Modelica.Blocks.Tables.CombiTable1Ds combiTable1Ds1_zp(tableOnFile = true, table = [250, 0.5, 0.9; 290, 0.7, 0.7], tableName = "thermochromLaCaMnO3", fileName = "/home/jens/iBOSS2/Simulation_Linux/ibosssim/model/iboss/thermochrom_alpha_epsilon.txt", smoothness = Modelica.Blocks.Types.Smoothness.ContinuousDerivative) if var_rad_zp annotation(Placement(transformation(extent = {{-110, -146}, {-90, -126}})));
  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temperatureSensor_yn if var_rad_yn annotation(Placement(transformation(extent = {{-65, -191}, {-45, -171}})));
  Modelica.Blocks.Tables.CombiTable1Ds combiTable1Ds1_yn(tableOnFile = true, table = [250, 0.5, 0.9; 290, 0.7, 0.7], tableName = "thermochromLaCaMnO3", fileName = "/home/jens/iBOSS2/Simulation_Linux/ibosssim/model/iboss/thermochrom_alpha_epsilon.txt", smoothness = Modelica.Blocks.Types.Smoothness.ContinuousDerivative) if var_rad_yn annotation(Placement(transformation(extent = {{-20, -191}, {0, -171}})));
protected
  parameter Modelica.SIunits.ThermalConductance Gx = y * z * material.k / x "Constant thermal conductance of material in x direction";
  parameter Modelica.SIunits.ThermalConductance Gy = x * z * material.k / y "Constant thermal conductance of material in x direction";
  parameter Modelica.SIunits.ThermalConductance Gz = y * x * material.k / z "Constant thermal conductance of material in x direction";
  parameter Modelica.SIunits.HeatCapacity C = x * y * z * material.d * material.c "Heat capacity of element (= cp*m)";
  parameter Modelica.SIunits.Area A_x = y * z "surface area in x direction";
  parameter Modelica.SIunits.Area A_y = x * z "surface area in x direction";
  parameter Modelica.SIunits.Area A_z = x * y "surface area in x direction";
equation
  connect(heatcapacitor1.port, thermalConductorlinks_x.port_b) annotation(Line(points = {{2, -30}, {2, -35}, {2, -36}, {-15, -36}, {-20, -36}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(heatcapacitor1.port, thermalconductorrechts_x.port_a) annotation(Line(points = {{2, -30}, {2, -35}, {2, -37}, {30, -37}, {35, -37}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductorunten_y.port_b, heatcapacitor1.port) annotation(Line(points = {{-2.3, -66}, {-2.3, -61}, {-2.3, -35}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductoroben_y.port_a, heatcapacitor1.port) annotation(Line(points = {{-2.7, 4}, {-2.7, -1}, {-0.3, -1}, {-0.3, -35}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductorvorne_z.port_a, heatcapacitor1.port) annotation(Line(points = {{-28, -53}, {-23, -53}, {2, -53}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductorhinten_z.port_b, heatcapacitor1.port) annotation(Line(points = {{18, -22}, {13, -22}, {13, -35}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(epsilon_xp.y, xp.epsilon) annotation(Line(points = {{76, -91}, {81, -91}, {110, -91}, {110, -41}, {115, -41}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(alpha_xp.y, xp.alpha) annotation(Line(points = {{76, -61}, {81, -61}, {110, -61}, {110, -41}, {115, -41}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(epsilon_xn.y, xn.epsilon) annotation(Line(points = {{-49, -16}, {-44, -16}, {-44, -36}, {-100, -36}, {-105, -36}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(alpha_xn.y, xn.alpha) annotation(Line(points = {{-49, 14}, {-44, 14}, {-44, -36}, {-100, -36}, {-105, -36}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(thermalconductorrechts_x.port_b, xp.thermal_port) annotation(Line(points = {{47, -37}, {52, -37}, {110, -37}, {110, -41}, {115, -41}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductorlinks_x.port_a, xn.thermal_port) annotation(Line(points = {{-40, -36}, {-45, -36}, {-100, -36}, {-105, -36}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Area_xp.y, xp.A) annotation(Line(points = {{81, -121}, {86, -121}, {110, -121}, {110, -41}, {115, -41}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(Area_xn.y, xn.A) annotation(Line(points = {{-49, 44}, {-44, 44}, {-44, -36}, {-100, -36}, {-105, -36}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(Area_zp.y, zp.A) annotation(Line(points = {{-49, -136}, {-44, -136}, {-44, -91}, {-70, -91}, {-75, -91}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(epsilon_zp.y, zp.epsilon) annotation(Line(points = {{-19, -136}, {-14, -136}, {-14, -91}, {-70, -91}, {-75, -91}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(alpha_zp.y, zp.alpha) annotation(Line(points = {{-19, -106}, {-14, -106}, {-14, -91}, {-70, -91}, {-75, -91}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(thermalConductorvorne_z.port_b, zp.thermal_port) annotation(Line(points = {{-42, -67}, {-47, -67}, {-70, -67}, {-70, -91}, {-75, -91}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(thermalConductorunten_y.port_a, yn.thermal_port) annotation(Line(points = {{-2.3, -81}, {-2.3, -86}, {-5, -86}, {-5, -131}, {0, -131}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(Area_yn.y, yn.A) annotation(Line(points = {{36, -141}, {41, -141}, {41, -131}, {5, -131}, {0, -131}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(alpha_yn.y, yn.alpha) annotation(Line(points = {{36, -111}, {41, -111}, {41, -131}, {5, -131}, {0, -131}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(epsilon_yn.y, yn.epsilon) annotation(Line(points = {{36, -81}, {41, -81}, {41, -131}, {5, -131}, {0, -131}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(thermalConductorhinten_z.port_a, zn.thermal_port) annotation(Line(points = {{32, -8}, {37, -8}, {55, -8}, {55, -11}, {60, -11}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(epsilon_zn.y, zn.epsilon) annotation(Line(points = {{96, 4}, {101, 4}, {101, -11}, {65, -11}, {60, -11}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(Area_zn.y, zn.A) annotation(Line(points = {{131, 4}, {136, 4}, {136, -11}, {65, -11}, {60, -11}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(alpha_zn.y, zn.alpha) annotation(Line(points = {{96, 34}, {101, 34}, {101, -11}, {65, -11}, {60, -11}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(thermalConductoroben_y.port_b, yp.thermal_port) annotation(Line(points = {{-2.7, 19}, {-2.7, 24}, {-2.7, 39}, {-20, 39}, {-25, 39}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(epsilon_yp.y, yp.epsilon) annotation(Line(points = {{36, 14}, {41, 14}, {41, 39}, {-20, 39}, {-25, 39}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(alpha_yp.y, yp.alpha) annotation(Line(points = {{36, 44}, {41, 44}, {41, 34}, {-20, 34}, {-20, 39}, {-25, 39}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(Area_yp.y, yp.A) annotation(Line(points = {{66, 44}, {71, 44}, {71, 34}, {-20, 34}, {-20, 39}, {-25, 39}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(heatcapacitor1.port, dissipation_power) annotation(Line(points = {{2, -30}, {2, -35}, {-11.3, -35}, {-11.3, -6}, {-25, -6}, {-30, -6}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(fixed_dissipation_HeatFlow.port, dissipation_power) annotation(Line(points = {{-20, 19}, {-15, 19}, {-15, -6}, {-25, -6}, {-30, -6}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(temperatureSensor_yp.T, combiTable1Ds1_yp.u) annotation(Line(points = {{25, 69}, {30, 69}, {43, 69}, {48, 69}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(temperatureSensor_xp.T, combiTable1Ds1_xp.u) annotation(Line(points = {{205, -36}, {210, -36}, {223, -36}, {228, -36}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(temperatureSensor_zn.T, combiTable1Ds1_zn.u) annotation(Line(points = {{180, 49}, {185, 49}, {198, 49}, {203, 49}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(temperatureSensor_xn.T, combiTable1Ds1_xn.u) annotation(Line(points = {{-130, -71}, {-125, -71}, {-127, -71}, {-122, -71}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(temperatureSensor_zp.T, combiTable1Ds1_zp.u) annotation(Line(points = {{-125, -136}, {-120, -136}, {-117, -136}, {-112, -136}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(temperatureSensor_yn.T, combiTable1Ds1_yn.u) annotation(Line(points = {{-45, -181}, {-40, -181}, {-27, -181}, {-22, -181}}, color = {0, 0, 127}, thickness = 0.0625));
  connect(combiTable1Ds1_xp.y[1], xp.epsilon) annotation(Line(points = {{251, -36}, {256, -36}, {256, -51}, {120, -51}, {120, -41}, {115, -41}}), AutoRoute = false);
  connect(combiTable1Ds1_xp.y[2], xp.alpha) annotation(Line(points = {{251, -36}, {256, -36}, {256, -46}, {120, -46}, {120, -41}, {115, -41}}));
  connect(combiTable1Ds1_xn.y[1], xn.epsilon) annotation(Line(points = {{-99, -71}, {-85, -71}, {-85, -36}, {-100, -36}, {-105, -36}}), AutoRoute = false);
  connect(combiTable1Ds1_xn.y[2], xn.alpha) annotation(Line(points = {{-99, -71}, {-94, -71}, {-94, -36}, {-100, -36}, {-105, -36}}));
  connect(combiTable1Ds1_yn.y[1], yn.epsilon) annotation(Line(points = {{1, -181}, {15, -181}, {15, -131}, {5, -131}, {0, -131}}), AutoRoute = false);
  connect(combiTable1Ds1_yn.y[2], yn.alpha) annotation(Line(points = {{1, -181}, {6, -181}, {6, -131}, {5, -131}, {0, -131}}));
  connect(combiTable1Ds1_yp.y[1], yp.epsilon) annotation(Line(points = {{71, 69}, {80, 69}, {80, 39}, {-20, 39}, {-25, 39}}), AutoRoute = false);
  connect(combiTable1Ds1_yp.y[2], yp.alpha) annotation(Line(points = {{71, 69}, {76, 69}, {76, 39}, {-20, 39}, {-25, 39}}));
  connect(combiTable1Ds1_zn.y[1], zn.epsilon) annotation(Line(points = {{226, 49}, {231, 49}, {231, -11}, {65, -11}, {60, -11}}));
  connect(combiTable1Ds1_zn.y[2], zn.alpha) annotation(Line(points = {{226, 49}, {231, 49}, {231, -11}, {65, -11}, {60, -11}}));
  connect(combiTable1Ds1_zp.y[1], zp.epsilon) annotation(Line(points = {{-89, -136}, {-84, -136}, {-75, -136}, {-75, -91}}), AutoRoute = false);
  connect(combiTable1Ds1_zp.y[2], zp.alpha) annotation(Line(points = {{-89, -136}, {-84, -136}, {-80, -136}, {-80, -91}, {-75, -91}}));
  connect(temperatureSensor_yp.port, heatcapacitor1.port) annotation(Line(points = {{5, 69}, {0, 69}, {0, -35}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(temperatureSensor_zn.port, heatcapacitor1.port) annotation(Line(points = {{160, 49}, {155, 49}, {155, -35}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(temperatureSensor_xp.port, heatcapacitor1.port) annotation(Line(points = {{185, -36}, {180, -36}, {2, -36}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(temperatureSensor_yn.port, heatcapacitor1.port) annotation(Line(points = {{-65, -181}, {-70, -181}, {-70, -108}, {2, -108}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(temperatureSensor_zp.port, heatcapacitor1.port) annotation(Line(points = {{-145, -136}, {-150, -136}, {-150, -85.7}, {2, -85.7}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  connect(temperatureSensor_xn.port, heatcapacitor1.port) annotation(Line(points = {{-150, -71}, {-155, -71}, {-155, -53}, {2, -53}, {2, -35}, {2, -30}}, color = {191, 0, 0}, thickness = 0.0625));
  annotation(combiTable1Ds1_yp(y(flags = 2)), combiTable1Ds1_xp(y(flags = 2)), combiTable1Ds1_zn(y(flags = 2)), combiTable1Ds1_xn(y(flags = 2)), combiTable1Ds1_zp(y(flags = 2)), combiTable1Ds1_yn(y(flags = 2)), Icon(coordinateSystem(grid = {10, 10}), graphics = {Rectangle(lineColor = {255, 0, 0}, fillColor = {255, 255, 255}, fillPattern = FillPattern.HorizontalCylinder, extent = {{-94.63549999999999, -59.4223}, {96.011, 61.8982}}, visible = true, origin = {-0.6878, -1.238}), Text(textString = "%name", textStyle = {TextStyle.Bold}, fillPattern = FillPattern.Solid, extent = {{-65.59999999999999, 72}, {54.4, 148.7}}, visible = true, origin = {5.6, -108.7}), Text(textString = "xn", lineColor = {0, 0, 0}, extent = {{-97.59999999999999, 17.4}, {-50.4, -16.2}}), Text(textString = "zp", lineColor = {0, 0, 0}, extent = {{-104.3, -29.2}, {-57.1, -62.8}}), Text(textString = "yn", lineColor = {0, 0, 0}, extent = {{-24.1, -32.6}, {23.1, -66.2}}), Text(textString = "yp", lineColor = {0, 0, 0}, extent = {{-24.7, 67.40000000000001}, {22.5, 33.8}}), Text(textString = "xp", lineColor = {0, 0, 0}, extent = {{49, 17.2}, {96.2, -16.4}}), Text(textString = "zn", lineColor = {0, 0, 0}, extent = {{55.6, 63.7}, {102.8, 30.1}})}), Diagram(coordinateSystem(extent = {{-105, -74}, {105, 74}}, grid = {5, 5})), experiment(StopTime = 1, StartTime = 0));
end thermal_element_opt_prop;